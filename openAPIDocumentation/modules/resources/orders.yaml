get:
  summary: Get user's pending orders
  tags: [Orders]
  parameters:
    - in: path
      name: userId
      schema:
        type: string
      required: true
      description: ID of the user
  security:
    - bearerAuth: []
  responses:
    200:
      description: List of the user's pending orders
      content:
        application/json:
          schema:
           $ref: '../schemas/Orders.yaml'
    400:
      $ref: '../responses/ValidationError.yaml'
    500:
      $ref: '../responses/ServerError.yaml' 

post:
  summary: Add user's pending orders
  tags: [Orders]
  parameters:
    - in: path
      name: userId
      schema:
        type: string
      required: true
      description: ID of the user
  security:
    - bearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../schemas/Orders.yaml'
  responses:
    200:
      description: The order was successfully placed
      content:
        application/json:
          schema:
           $ref: '../schemas/Orders.yaml'
    400:
      $ref: '../responses/ValidationError.yaml'
    500:
      $ref: '../responses/ServerError.yaml' 

patch:
  summary: Buy items from the Cart
  tags: [Orders]
  security:
    - bearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
        required:
          - totalPaid
        properties:
          totalPaid:
            type: integer
            description: Total paid amount
        example:
          totalPaid: 12000
  responses:
    200:
      description: Order was successfully paid
      content:
        application/json:
          schema:
           $ref: '../schemas/Purchases.yaml'
    400:
      $ref: '../responses/ValidationError.yaml'
    500:
      $ref: '../responses/ServerError.yaml' 